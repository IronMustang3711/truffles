// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

#ifndef SHOOTER_H
#define SHOOTER_H

#include "CANTalon.h"
#include "Commands/Subsystem.h"

/**
 *
 *
 * @author ExampleAuthor
 */
class Shooter : public Subsystem {
 private:
  // It's desirable that everything possible is private except
  // for methods that implement subsystem capabilities
  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
  std::shared_ptr<CANTalon> shooterController;
  std::shared_ptr<SpeedController> hexapusController;

  // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
  bool shooterRunning;

 public:
  Shooter();

  void InitDefaultCommand();
  /**
   *
   * @param speed in [0,1]
   */
  void runShooterMotor(double speed);

  /**
   *
   * @param speed in [0,1]
   */
  void runHexapusMotor(double speed);

  void runHexapusMotor();
  void stopHexapusMotor();
  void unjamHexapusMotor();

  /**
   * setup PID values for the shooter controller.
   */
  void initShooter();

  double getHexapusCurrent();
  bool isHexapusJammed();
};

#endif
