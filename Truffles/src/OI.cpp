// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/RunIntake.h"
#include "Commands/RunShooter.h"
#include "Commands/RunWinch.h"


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

class MyJoystick : public Joystick {
public:
    MyJoystick(int port) : Joystick(port) {}

};
class MyJoystickButton: public JoystickButton {
public:
    MyJoystickButton(GenericHID *joystick, int buttonNumber) : JoystickButton(joystick, buttonNumber) {}
};

OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick.reset(new MyJoystick(0));
    
    winchUpSlow.reset(new MyJoystickButton(joystick.get(), 11));
    winchUpSlow->WhileHeld(new RunWinch(0.3));
    intakeButton.reset(new MyJoystickButton(joystick.get(), 3));
    intakeButton->WhileHeld(new RunIntake(0));
    winchDown.reset(new MyJoystickButton(joystick.get(), 9));
    winchDown->WhileHeld(new RunWinch(-1));
    winchUp.reset(new MyJoystickButton(joystick.get(), 7));
    winchUp->WhileHeld(new RunWinch(1));

    shootButton.reset(new MyJoystickButton(joystick.get(), 2));
    shootButton->WhileHeld(new RunShooter());

    // SmartDashboard Buttons
    SmartDashboard::PutData("RunIntake: in", new RunIntake(1));
    SmartDashboard::PutData("RunIntake: out", new RunIntake(-1));
    SmartDashboard::PutData("RunWinch: down", new RunWinch(-1));
    SmartDashboard::PutData("RunWinch: up", new RunWinch(1));
    SmartDashboard::PutData("RunWinch: upslow", new RunWinch(0.3));
    SmartDashboard::PutData("RunShooter", new RunShooter());
    SmartDashboard::PutData("DriveWithJoystick", new DriveWithJoystick());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getJoystick() {
   return joystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
