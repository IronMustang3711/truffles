// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "Commands/AutonomousCommand.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/RunIntake.h"
#include "Commands/RunShooter.h"
#include "Commands/RunWinch.h"
#include "Commands/GearCatchCommands.h"
#include "Commands/RunHexapus.h"

/**
 * some BS about abstract classes...
 */
class MyJoystick : public Joystick {
public:
    MyJoystick(int port) : Joystick(port) {}

};

class MyJoystickButton : public JoystickButton {
public:
    MyJoystickButton(GenericHID *joystick, int buttonNumber) : JoystickButton(joystick, buttonNumber) {}

};

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

//TODO: IMPLEMENT THIS STUFF!!!
/**
 * Operator Input Setup
 * ====================
 *
 * Driver Joystick
 * ------------------
 * 	-Toggle pickup: button 2
 * 	-switch robot front: button 1
 * 	-rope climb: button 5 - go up while held, hold on release
 * 	-driving: x,y,twist
 *
 * 	Secondary Joystick
 * 	---------------------
 * 	-shoot(toggle hexapus): button 1
 * 	-shoot(toggle flywheel): button 2
 * 	-shoot(flywheel speed): throttle
 * 	-shoot(hexapus unjam/go backwards a little): button 4
 * 	-Gear Catch Toggle(in/out): button 3
 *
 */
OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    driverJoystick.reset(new Joystick(0));
    shooterJoystick.reset(new Joystick(1));

    winchUpSlow.reset(new JoystickButton(driverJoystick.get(), 8));
    winchUpSlow->WhileHeld(new RunWinch(1.0));
    intakeButton.reset(new JoystickButton(driverJoystick.get(), 3));
    intakeButton->WhileHeld(new RunIntake(-0.6));
//    winchDown.reset(new JoystickButton(driverJoystick.get(), 9));
//    winchDown->WhenPressed(new RunWinch(-1));
    winchUp.reset(new JoystickButton(driverJoystick.get(), 7));
    winchUp->WhileHeld(new RunWinch(0.3));
//
    shootButton.reset(new JoystickButton(driverJoystick.get(), 2));
    shootButton->WhileHeld(new RunShooter());
//
    loadButton.reset(new JoystickButton(driverJoystick.get(), 1));
    loadButton->WhileHeld(new RunHexapus(1.0));

    gearAcceptIn.reset(new JoystickButton(driverJoystick.get(), 5));
    gearAcceptIn->WhenPressed(new GearCatchIn());

    gearAcceptOut.reset(new JoystickButton(driverJoystick.get(), 6));
    gearAcceptOut->WhenPressed(new GearCatchOut());

    initSmartDashboardCommands();

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

}

void OI::initSmartDashboardCommands() {
    // SmartDashboard Buttons
    SmartDashboard::PutData("RunIntake: in", new RunIntake(1));
    SmartDashboard::PutData("RunIntake: out", new RunIntake(-1));
    SmartDashboard::PutData("RunWinch: down", new RunWinch(-1));
    SmartDashboard::PutData("RunWinch: up", new RunWinch(1));
    SmartDashboard::PutData("RunWinch: upslow", new RunWinch(0.3));
    SmartDashboard::PutData("RunShooter", new RunShooter());
    SmartDashboard::PutData("DriveWithJoystick", new DriveWithJoystick());
    SmartDashboard::PutData("Autonomous Command", new AutonomousCommand());
    SmartDashboard::PutData("Hexapus", new RunHexapus(1.0));
//
    SmartDashboard::PutData("Gear catch: vertical", new GearCatchVertical());
    SmartDashboard::PutData("Gear catch: in", new GearCatchIn());
    SmartDashboard::PutData("Gear catch: out", new GearCatchOut());
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<Joystick> OI::getDriverJoystick() {
    return driverJoystick;
}

std::shared_ptr<Joystick> OI::getShooterJoystick() {
    return shooterJoystick;
}


// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
