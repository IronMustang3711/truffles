// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef OI_H
#define OI_H

#include "WPILib.h"
class ReAddDefaultHexapusCommand : public InstantCommand {
    friend class OI;
public:
    ReAddDefaultHexapusCommand();


    virtual void Exeute();

};
class OI {
    friend class ReAddDefaultHexapusCommand;

public:
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    std::shared_ptr<Joystick> driverJoystick;
    std::shared_ptr<Joystick> shooterJoystick;
//driver buttons
    std::shared_ptr<JoystickButton> winchUpSlow;
    std::shared_ptr<JoystickButton> winchDown;
    std::shared_ptr<JoystickButton> winchUp;
    std::shared_ptr<JoystickButton> loadButton;

    //shooter buttons
    std::shared_ptr<JoystickButton> shootButton;
    std::shared_ptr<JoystickButton> gearAcceptOut;
    std::shared_ptr<JoystickButton> gearAcceptIn;
    std::shared_ptr<JoystickButton> intakeButton;
    std::shared_ptr<JoystickButton> unjamButton;


    void initSmartDashboardCommands();






public:
    OI();

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=PROTOTYPES

    std::shared_ptr<Joystick> getDriverJoystick();

    std::shared_ptr<Joystick> getShooterJoystick();



};

#endif
