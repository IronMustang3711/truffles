// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#ifndef OI_H
#define OI_H

#include "WPILib.h"

//class ReAddDefaultHexapusCommand : public InstantCommand {
//    friend class OI;
//
//public:
//    ReAddDefaultHexapusCommand();
//
//
//    virtual void Exeute();
//
//};




class Btn final : public Button {

public:
    Btn(Joystick *stick, int buttonNumber);

    virtual ~Btn() = default;

    virtual bool Get();

    bool isPressed();

    Joystick *joystick;
    int buttonNumber;


};

class DriverJoyStick final : public Joystick {

public:
    DriverJoyStick();

    Btn ballIntakeButton;
    Btn robotFrontToggleButton;
    Btn ropeClimbButton;


};

class ShooterJoystick : public Joystick {
public:
    ShooterJoystick();

    Btn hexapusToggleButton;
    Btn flywheelToggleButton;
    Btn unjamHexapusButton;
    Btn gearCatchToggleButton;
};

class OI {
   // friend class ReAddDefaultHexapusCommand;

public:


    Btn &ballIntakeButton() const;

    Btn &robotFrontToggleButton() const;

    Btn &ropeClimbButton() const;

    Btn &hexapusToggleButton() const;

    Btn &flywheelToggleButton() const;

    Btn &unjamHexapusButton() const;

    Btn &gearCatchToggleButton() const;


    void initSmartDashboardCommands();


    OI();

    ShooterJoystick shooterJoystick{};
    DriverJoyStick driverJoystick{};

};

#endif
